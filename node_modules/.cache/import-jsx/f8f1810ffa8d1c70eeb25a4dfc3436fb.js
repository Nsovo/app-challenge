'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const {
  Text
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  const [results, SetResult] = React.useState("results");
  React.useEffect(() => {
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = Object.values(data.addresses).join(',');
    const dataArray = addressData.split(",");

    if (address && addressData.length > 3) {
      for (let value of dataArray) {
        // console.log(value)
        if (value.includes(address)) console.log("true");
      }
    }
  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }), /*#__PURE__*/React.createElement(Text, null, "Addressed searched for : ", results));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFwcCIsImFkZHJlc3MiLCJzZWFyY2giLCJ1c2VTdGF0ZSIsInJlc3VsdHMiLCJTZXRSZXN1bHQiLCJ1c2VFZmZlY3QiLCJkYXRhIiwiYWRkcmVzc2VzIiwiYWRkcmVzc0RhdGEiLCJPYmplY3QiLCJ2YWx1ZXMiLCJqb2luIiwiZGF0YUFycmF5Iiwic3BsaXQiLCJsZW5ndGgiLCJ2YWx1ZSIsImluY2x1ZGVzIiwiY29uc29sZSIsImxvZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7Qm94fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3Qge1RleHR9ID0gcmVxdWlyZSgnaW5rJyk7XG5cbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuXG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW2FkZHJlc3MsIHNlYXJjaF0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW3Jlc3VsdHMgLCBTZXRSZXN1bHRdID0gUmVhY3QudXNlU3RhdGUoXCJyZXN1bHRzXCIpXG5cblx0UmVhY3QudXNlRWZmZWN0KCgpID0+IHtcblx0XHRjb25zdCBkYXRhID0ge1xuXHRcdFx0YWRkcmVzc2VzOiB7XG5cdFx0XHRcdFwiMHgxMDAxXCI6IFwiTW9uZXJvIHN0YW5kYXJkIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDJcIjogXCJNb25lcm8gc3ViIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDNcIjogXCJCaXRjb2luIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDRcIjogXCJFdGhlcmV1bSBhZGRyZXNzXCJcblx0XHRcdH1cblx0XHR9XG5cblx0XHRjb25zdCBhZGRyZXNzRGF0YSA9ICBPYmplY3QudmFsdWVzKGRhdGEuYWRkcmVzc2VzKS5qb2luKCcsJylcblx0XHRjb25zdCBkYXRhQXJyYXkgPSBhZGRyZXNzRGF0YS5zcGxpdChcIixcIilcblx0XHRpZihhZGRyZXNzICYmIGFkZHJlc3NEYXRhLmxlbmd0aCA+IDMpIHtcblx0XHRcdGZvciAobGV0IHZhbHVlIG9mIGRhdGFBcnJheSkge1xuXHRcdFx0XHQvLyBjb25zb2xlLmxvZyh2YWx1ZSlcblx0XHRcdFx0aWYgKHZhbHVlLmluY2x1ZGVzKGFkZHJlc3MpKVxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwidHJ1ZVwiKVxuXHRcdFx0fVxuXHRcdH1cblxuXHR9KTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3g+XG5cdFx0XHQ8VGV4dElucHV0XG5cdFx0XHRcdHBsYWNlaG9sZGVyPVwiRW50ZXIgYWRkcmVzcyB0byBzZWFyY2guLi5cIlxuXHRcdFx0XHR2YWx1ZT17YWRkcmVzc31cblx0XHRcdFx0b25DaGFuZ2U9e3NlYXJjaH1cblx0XHRcdC8+XG5cdFx0XHQ8VGV4dD5cblx0XHRcdFx0QWRkcmVzc2VkIHNlYXJjaGVkIGZvciA6IHtyZXN1bHRzfVxuXHRcdFx0PC9UZXh0PlxuXG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcblxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07RUFBQ0M7QUFBRCxJQUFRRCxPQUFPLENBQUMsS0FBRCxDQUFyQjs7QUFDQSxNQUFNO0VBQUNFO0FBQUQsSUFBU0YsT0FBTyxDQUFDLEtBQUQsQ0FBdEI7O0FBRUEsTUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQkksT0FBNUM7O0FBR0EsTUFBTUMsR0FBRyxHQUFHLE1BQU07RUFDakIsTUFBTSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsSUFBb0JSLEtBQUssQ0FBQ1MsUUFBTixDQUFlLEVBQWYsQ0FBMUI7RUFDQSxNQUFNLENBQUNDLE9BQUQsRUFBV0MsU0FBWCxJQUF3QlgsS0FBSyxDQUFDUyxRQUFOLENBQWUsU0FBZixDQUE5QjtFQUVBVCxLQUFLLENBQUNZLFNBQU4sQ0FBZ0IsTUFBTTtJQUNyQixNQUFNQyxJQUFJLEdBQUc7TUFDWkMsU0FBUyxFQUFFO1FBQ1YsVUFBVSx5QkFEQTtRQUVWLFVBQVUsb0JBRkE7UUFHVixVQUFVLGlCQUhBO1FBSVYsVUFBVTtNQUpBO0lBREMsQ0FBYjtJQVNBLE1BQU1DLFdBQVcsR0FBSUMsTUFBTSxDQUFDQyxNQUFQLENBQWNKLElBQUksQ0FBQ0MsU0FBbkIsRUFBOEJJLElBQTlCLENBQW1DLEdBQW5DLENBQXJCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHSixXQUFXLENBQUNLLEtBQVosQ0FBa0IsR0FBbEIsQ0FBbEI7O0lBQ0EsSUFBR2IsT0FBTyxJQUFJUSxXQUFXLENBQUNNLE1BQVosR0FBcUIsQ0FBbkMsRUFBc0M7TUFDckMsS0FBSyxJQUFJQyxLQUFULElBQWtCSCxTQUFsQixFQUE2QjtRQUM1QjtRQUNBLElBQUlHLEtBQUssQ0FBQ0MsUUFBTixDQUFlaEIsT0FBZixDQUFKLEVBQ0NpQixPQUFPLENBQUNDLEdBQVIsQ0FBWSxNQUFaO01BQ0Q7SUFDRDtFQUVELENBcEJEO0VBc0JBLG9CQUNDLG9CQUFDLEdBQUQscUJBQ0Msb0JBQUMsU0FBRDtJQUNDLFdBQVcsRUFBQyw0QkFEYjtJQUVDLEtBQUssRUFBRWxCLE9BRlI7SUFHQyxRQUFRLEVBQUVDO0VBSFgsRUFERCxlQU1DLG9CQUFDLElBQUQscUNBQzJCRSxPQUQzQixDQU5ELENBREQ7QUFhQSxDQXZDRDs7QUF5Q0FnQixNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixHQUFqQiJ9