'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  React.useEffect(() => {
    console.log("address ##", address);
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = data.addresses;

    for (let value in addressData) {
      console.log(value);
    } // console.log("addressData", addressData)

  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0SW5wdXQiLCJkZWZhdWx0IiwiQXBwIiwiYWRkcmVzcyIsInNlYXJjaCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJhZGRyZXNzZXMiLCJhZGRyZXNzRGF0YSIsInZhbHVlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHtCb3h9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCBUZXh0SW5wdXQgPSByZXF1aXJlKFwiaW5rLXRleHQtaW5wdXRcIikuZGVmYXVsdDtcblxuXG5jb25zdCBBcHAgPSAoKSA9PiB7XG5cdGNvbnN0IFthZGRyZXNzLCBzZWFyY2hdID0gUmVhY3QudXNlU3RhdGUoXCJcIik7XG5cblx0UmVhY3QudXNlRWZmZWN0KCgpID0+IHtcblx0XHRjb25zb2xlLmxvZyhcImFkZHJlc3MgIyNcIiwgYWRkcmVzcylcblx0XHRjb25zdCBkYXRhID0ge1xuXHRcdFx0YWRkcmVzc2VzOiB7XG5cdFx0XHRcdFwiMHgxMDAxXCI6IFwiTW9uZXJvIHN0YW5kYXJkIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDJcIjogXCJNb25lcm8gc3ViIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDNcIjogXCJCaXRjb2luIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDRcIjogXCJFdGhlcmV1bSBhZGRyZXNzXCJcblx0XHRcdH1cblx0XHR9XG5cblx0XHRjb25zdCBhZGRyZXNzRGF0YSA9IGRhdGEuYWRkcmVzc2VzXG5cdFx0Zm9yIChsZXQgdmFsdWUgaW4gYWRkcmVzc0RhdGEpIHtcblx0XHRcdGNvbnNvbGUubG9nKHZhbHVlKVxuXHRcdH1cblxuXHRcdC8vIGNvbnNvbGUubG9nKFwiYWRkcmVzc0RhdGFcIiwgYWRkcmVzc0RhdGEpXG5cblx0fSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94PlxuXHRcdFx0PFRleHRJbnB1dFxuXHRcdFx0XHRwbGFjZWhvbGRlcj1cIkVudGVyIGFkZHJlc3MgdG8gc2VhcmNoLi4uXCJcblx0XHRcdFx0dmFsdWU9e2FkZHJlc3N9XG5cdFx0XHRcdG9uQ2hhbmdlPXtzZWFyY2h9XG5cdFx0XHQvPlxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0VBQUNDO0FBQUQsSUFBUUQsT0FBTyxDQUFDLEtBQUQsQ0FBckI7O0FBQ0EsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQkcsT0FBNUM7O0FBR0EsTUFBTUMsR0FBRyxHQUFHLE1BQU07RUFDakIsTUFBTSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsSUFBb0JQLEtBQUssQ0FBQ1EsUUFBTixDQUFlLEVBQWYsQ0FBMUI7RUFFQVIsS0FBSyxDQUFDUyxTQUFOLENBQWdCLE1BQU07SUFDckJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVosRUFBMEJMLE9BQTFCO0lBQ0EsTUFBTU0sSUFBSSxHQUFHO01BQ1pDLFNBQVMsRUFBRTtRQUNWLFVBQVUseUJBREE7UUFFVixVQUFVLG9CQUZBO1FBR1YsVUFBVSxpQkFIQTtRQUlWLFVBQVU7TUFKQTtJQURDLENBQWI7SUFTQSxNQUFNQyxXQUFXLEdBQUdGLElBQUksQ0FBQ0MsU0FBekI7O0lBQ0EsS0FBSyxJQUFJRSxLQUFULElBQWtCRCxXQUFsQixFQUErQjtNQUM5QkosT0FBTyxDQUFDQyxHQUFSLENBQVlJLEtBQVo7SUFDQSxDQWRvQixDQWdCckI7O0VBRUEsQ0FsQkQ7RUFvQkEsb0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxTQUFEO0lBQ0MsV0FBVyxFQUFDLDRCQURiO0lBRUMsS0FBSyxFQUFFVCxPQUZSO0lBR0MsUUFBUSxFQUFFQztFQUhYLEVBREQsQ0FERDtBQVNBLENBaENEOztBQWtDQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixHQUFqQiJ9