'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  React.useEffect(() => {
    console.log("address ##", address);
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = data.addresses;

    for (let value in addressData) {
      if (value.contains("0x1001")) console.log(value);
    } // console.log("addressData", addressData)

  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }), /*#__PURE__*/React.createElement(Box, null, "Addressed searched for : ", address));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0SW5wdXQiLCJkZWZhdWx0IiwiQXBwIiwiYWRkcmVzcyIsInNlYXJjaCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJhZGRyZXNzZXMiLCJhZGRyZXNzRGF0YSIsInZhbHVlIiwiY29udGFpbnMiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsidWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuY29uc3QgUmVhY3QgPSByZXF1aXJlKCdyZWFjdCcpO1xuY29uc3Qge0JveH0gPSByZXF1aXJlKCdpbmsnKTtcbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuXG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW2FkZHJlc3MsIHNlYXJjaF0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblxuXHRSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKFwiYWRkcmVzcyAjI1wiLCBhZGRyZXNzKVxuXHRcdGNvbnN0IGRhdGEgPSB7XG5cdFx0XHRhZGRyZXNzZXM6IHtcblx0XHRcdFx0XCIweDEwMDFcIjogXCJNb25lcm8gc3RhbmRhcmQgYWRkcmVzc1wiLFxuXHRcdFx0XHRcIjB4MTAwMlwiOiBcIk1vbmVybyBzdWIgYWRkcmVzc1wiLFxuXHRcdFx0XHRcIjB4MTAwM1wiOiBcIkJpdGNvaW4gYWRkcmVzc1wiLFxuXHRcdFx0XHRcIjB4MTAwNFwiOiBcIkV0aGVyZXVtIGFkZHJlc3NcIlxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGNvbnN0IGFkZHJlc3NEYXRhID0gZGF0YS5hZGRyZXNzZXNcblx0XHRmb3IgKGxldCB2YWx1ZSBpbiBhZGRyZXNzRGF0YSkge1xuXHRcdFx0aWYgKHZhbHVlLmNvbnRhaW5zKFwiMHgxMDAxXCIpKVxuXHRcdFx0XHRjb25zb2xlLmxvZyh2YWx1ZSlcblx0XHR9XG5cblx0XHQvLyBjb25zb2xlLmxvZyhcImFkZHJlc3NEYXRhXCIsIGFkZHJlc3NEYXRhKVxuXG5cdH0pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveD5cblx0XHRcdDxUZXh0SW5wdXRcblx0XHRcdFx0cGxhY2Vob2xkZXI9XCJFbnRlciBhZGRyZXNzIHRvIHNlYXJjaC4uLlwiXG5cdFx0XHRcdHZhbHVlPXthZGRyZXNzfVxuXHRcdFx0XHRvbkNoYW5nZT17c2VhcmNofVxuXHRcdFx0Lz5cblx0XHRcdDxCb3g+XG5cdFx0XHRcdEFkZHJlc3NlZCBzZWFyY2hlZCBmb3IgOiB7YWRkcmVzc31cblx0XHRcdDwvQm94PlxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0VBQUNDO0FBQUQsSUFBUUQsT0FBTyxDQUFDLEtBQUQsQ0FBckI7O0FBQ0EsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsZ0JBQUQsQ0FBUCxDQUEwQkcsT0FBNUM7O0FBR0EsTUFBTUMsR0FBRyxHQUFHLE1BQU07RUFDakIsTUFBTSxDQUFDQyxPQUFELEVBQVVDLE1BQVYsSUFBb0JQLEtBQUssQ0FBQ1EsUUFBTixDQUFlLEVBQWYsQ0FBMUI7RUFFQVIsS0FBSyxDQUFDUyxTQUFOLENBQWdCLE1BQU07SUFDckJDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLFlBQVosRUFBMEJMLE9BQTFCO0lBQ0EsTUFBTU0sSUFBSSxHQUFHO01BQ1pDLFNBQVMsRUFBRTtRQUNWLFVBQVUseUJBREE7UUFFVixVQUFVLG9CQUZBO1FBR1YsVUFBVSxpQkFIQTtRQUlWLFVBQVU7TUFKQTtJQURDLENBQWI7SUFTQSxNQUFNQyxXQUFXLEdBQUdGLElBQUksQ0FBQ0MsU0FBekI7O0lBQ0EsS0FBSyxJQUFJRSxLQUFULElBQWtCRCxXQUFsQixFQUErQjtNQUM5QixJQUFJQyxLQUFLLENBQUNDLFFBQU4sQ0FBZSxRQUFmLENBQUosRUFDQ04sT0FBTyxDQUFDQyxHQUFSLENBQVlJLEtBQVo7SUFDRCxDQWZvQixDQWlCckI7O0VBRUEsQ0FuQkQ7RUFxQkEsb0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxTQUFEO0lBQ0MsV0FBVyxFQUFDLDRCQURiO0lBRUMsS0FBSyxFQUFFVCxPQUZSO0lBR0MsUUFBUSxFQUFFQztFQUhYLEVBREQsZUFNQyxvQkFBQyxHQUFELHFDQUMyQkQsT0FEM0IsQ0FORCxDQUREO0FBWUEsQ0FwQ0Q7O0FBc0NBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJiLEdBQWpCIn0=