'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const {
  Text
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  React.useEffect(() => {
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = Object.values(data.addresses).join(',');
    const dataArray = addressData.split(",");

    if (address) {
      for (let value of dataArray) {
        // console.log(value)
        if (value.includes(address)) console.log("true");
      }

      console.log("addressData", addressData);
    }
  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }), /*#__PURE__*/React.createElement(Text, null, "Addressed searched for :"));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFwcCIsImFkZHJlc3MiLCJzZWFyY2giLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsImRhdGEiLCJhZGRyZXNzZXMiLCJhZGRyZXNzRGF0YSIsIk9iamVjdCIsInZhbHVlcyIsImpvaW4iLCJkYXRhQXJyYXkiLCJzcGxpdCIsInZhbHVlIiwiaW5jbHVkZXMiLCJjb25zb2xlIiwibG9nIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbInVpLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcbmNvbnN0IFJlYWN0ID0gcmVxdWlyZSgncmVhY3QnKTtcbmNvbnN0IHtCb3h9ID0gcmVxdWlyZSgnaW5rJyk7XG5jb25zdCB7VGV4dH0gPSByZXF1aXJlKCdpbmsnKTtcblxuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZShcImluay10ZXh0LWlucHV0XCIpLmRlZmF1bHQ7XG5cblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbYWRkcmVzcywgc2VhcmNoXSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc3QgZGF0YSA9IHtcblx0XHRcdGFkZHJlc3Nlczoge1xuXHRcdFx0XHRcIjB4MTAwMVwiOiBcIk1vbmVybyBzdGFuZGFyZCBhZGRyZXNzXCIsXG5cdFx0XHRcdFwiMHgxMDAyXCI6IFwiTW9uZXJvIHN1YiBhZGRyZXNzXCIsXG5cdFx0XHRcdFwiMHgxMDAzXCI6IFwiQml0Y29pbiBhZGRyZXNzXCIsXG5cdFx0XHRcdFwiMHgxMDA0XCI6IFwiRXRoZXJldW0gYWRkcmVzc1wiXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Y29uc3QgYWRkcmVzc0RhdGEgPSAgT2JqZWN0LnZhbHVlcyhkYXRhLmFkZHJlc3Nlcykuam9pbignLCcpXG5cdFx0Y29uc3QgZGF0YUFycmF5ID0gYWRkcmVzc0RhdGEuc3BsaXQoXCIsXCIpXG5cdFx0aWYoYWRkcmVzcykge1xuXHRcdFx0Zm9yIChsZXQgdmFsdWUgb2YgZGF0YUFycmF5KSB7XG5cdFx0XHRcdC8vIGNvbnNvbGUubG9nKHZhbHVlKVxuXHRcdFx0XHRpZiAodmFsdWUuaW5jbHVkZXMoYWRkcmVzcykpXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJ0cnVlXCIpXG5cdFx0XHR9XG5cdFx0XHRjb25zb2xlLmxvZyhcImFkZHJlc3NEYXRhXCIsIGFkZHJlc3NEYXRhKVxuXHRcdH1cblxuXHR9KTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3g+XG5cdFx0XHQ8VGV4dElucHV0XG5cdFx0XHRcdHBsYWNlaG9sZGVyPVwiRW50ZXIgYWRkcmVzcyB0byBzZWFyY2guLi5cIlxuXHRcdFx0XHR2YWx1ZT17YWRkcmVzc31cblx0XHRcdFx0b25DaGFuZ2U9e3NlYXJjaH1cblx0XHRcdC8+XG5cdFx0XHQ8VGV4dD5cblx0XHRcdFx0QWRkcmVzc2VkIHNlYXJjaGVkIGZvciA6XG5cdFx0XHQ8L1RleHQ+XG5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwO1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFDQztBQUFELElBQVFELE9BQU8sQ0FBQyxLQUFELENBQXJCOztBQUNBLE1BQU07RUFBQ0U7QUFBRCxJQUFTRixPQUFPLENBQUMsS0FBRCxDQUF0Qjs7QUFFQSxNQUFNRyxTQUFTLEdBQUdILE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCSSxPQUE1Qzs7QUFHQSxNQUFNQyxHQUFHLEdBQUcsTUFBTTtFQUNqQixNQUFNLENBQUNDLE9BQUQsRUFBVUMsTUFBVixJQUFvQlIsS0FBSyxDQUFDUyxRQUFOLENBQWUsRUFBZixDQUExQjtFQUVBVCxLQUFLLENBQUNVLFNBQU4sQ0FBZ0IsTUFBTTtJQUNyQixNQUFNQyxJQUFJLEdBQUc7TUFDWkMsU0FBUyxFQUFFO1FBQ1YsVUFBVSx5QkFEQTtRQUVWLFVBQVUsb0JBRkE7UUFHVixVQUFVLGlCQUhBO1FBSVYsVUFBVTtNQUpBO0lBREMsQ0FBYjtJQVNBLE1BQU1DLFdBQVcsR0FBSUMsTUFBTSxDQUFDQyxNQUFQLENBQWNKLElBQUksQ0FBQ0MsU0FBbkIsRUFBOEJJLElBQTlCLENBQW1DLEdBQW5DLENBQXJCO0lBQ0EsTUFBTUMsU0FBUyxHQUFHSixXQUFXLENBQUNLLEtBQVosQ0FBa0IsR0FBbEIsQ0FBbEI7O0lBQ0EsSUFBR1gsT0FBSCxFQUFZO01BQ1gsS0FBSyxJQUFJWSxLQUFULElBQWtCRixTQUFsQixFQUE2QjtRQUM1QjtRQUNBLElBQUlFLEtBQUssQ0FBQ0MsUUFBTixDQUFlYixPQUFmLENBQUosRUFDQ2MsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWjtNQUNEOztNQUNERCxPQUFPLENBQUNDLEdBQVIsQ0FBWSxhQUFaLEVBQTJCVCxXQUEzQjtJQUNBO0VBRUQsQ0FyQkQ7RUF1QkEsb0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxTQUFEO0lBQ0MsV0FBVyxFQUFDLDRCQURiO0lBRUMsS0FBSyxFQUFFTixPQUZSO0lBR0MsUUFBUSxFQUFFQztFQUhYLEVBREQsZUFNQyxvQkFBQyxJQUFELG1DQU5ELENBREQ7QUFhQSxDQXZDRDs7QUF5Q0FlLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmxCLEdBQWpCIn0=