'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const {
  Text
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  React.useEffect(() => {
    console.log("address ##", address);
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = data.addresses;

    for (let value in addressData) {
      console.log(value);
    } // console.log("addressData", addressData)

  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }), /*#__PURE__*/React.createElement(Text, null, "Addressed searched for :"));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFwcCIsImFkZHJlc3MiLCJzZWFyY2giLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsImNvbnNvbGUiLCJsb2ciLCJkYXRhIiwiYWRkcmVzc2VzIiwiYWRkcmVzc0RhdGEiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7Qm94fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3Qge1RleHR9ID0gcmVxdWlyZSgnaW5rJyk7XG5cbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuXG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW2FkZHJlc3MsIHNlYXJjaF0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblxuXHRSZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xuXHRcdGNvbnNvbGUubG9nKFwiYWRkcmVzcyAjI1wiLCBhZGRyZXNzKVxuXHRcdGNvbnN0IGRhdGEgPSB7XG5cdFx0XHRhZGRyZXNzZXM6IHtcblx0XHRcdFx0XCIweDEwMDFcIjogXCJNb25lcm8gc3RhbmRhcmQgYWRkcmVzc1wiLFxuXHRcdFx0XHRcIjB4MTAwMlwiOiBcIk1vbmVybyBzdWIgYWRkcmVzc1wiLFxuXHRcdFx0XHRcIjB4MTAwM1wiOiBcIkJpdGNvaW4gYWRkcmVzc1wiLFxuXHRcdFx0XHRcIjB4MTAwNFwiOiBcIkV0aGVyZXVtIGFkZHJlc3NcIlxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGNvbnN0IGFkZHJlc3NEYXRhID0gZGF0YS5hZGRyZXNzZXNcblx0XHRmb3IgKGxldCB2YWx1ZSBpbiBhZGRyZXNzRGF0YSkge1xuXHRcdFx0XHRjb25zb2xlLmxvZyh2YWx1ZSlcblx0XHR9XG5cblx0XHQvLyBjb25zb2xlLmxvZyhcImFkZHJlc3NEYXRhXCIsIGFkZHJlc3NEYXRhKVxuXG5cdH0pO1xuXG5cdHJldHVybiAoXG5cdFx0PEJveD5cblx0XHRcdDxUZXh0SW5wdXRcblx0XHRcdFx0cGxhY2Vob2xkZXI9XCJFbnRlciBhZGRyZXNzIHRvIHNlYXJjaC4uLlwiXG5cdFx0XHRcdHZhbHVlPXthZGRyZXNzfVxuXHRcdFx0XHRvbkNoYW5nZT17c2VhcmNofVxuXHRcdFx0Lz5cblx0XHRcdDxUZXh0PlxuXHRcdFx0XHRBZGRyZXNzZWQgc2VhcmNoZWQgZm9yIDpcblx0XHRcdDwvVGV4dD5cblx0XHQ8L0JveD5cblx0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gQXBwO1xuXG4iXSwibWFwcGluZ3MiOiJBQUFBOztBQUNBLE1BQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFDQztBQUFELElBQVFELE9BQU8sQ0FBQyxLQUFELENBQXJCOztBQUNBLE1BQU07RUFBQ0U7QUFBRCxJQUFTRixPQUFPLENBQUMsS0FBRCxDQUF0Qjs7QUFFQSxNQUFNRyxTQUFTLEdBQUdILE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCSSxPQUE1Qzs7QUFHQSxNQUFNQyxHQUFHLEdBQUcsTUFBTTtFQUNqQixNQUFNLENBQUNDLE9BQUQsRUFBVUMsTUFBVixJQUFvQlIsS0FBSyxDQUFDUyxRQUFOLENBQWUsRUFBZixDQUExQjtFQUVBVCxLQUFLLENBQUNVLFNBQU4sQ0FBZ0IsTUFBTTtJQUNyQkMsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWixFQUEwQkwsT0FBMUI7SUFDQSxNQUFNTSxJQUFJLEdBQUc7TUFDWkMsU0FBUyxFQUFFO1FBQ1YsVUFBVSx5QkFEQTtRQUVWLFVBQVUsb0JBRkE7UUFHVixVQUFVLGlCQUhBO1FBSVYsVUFBVTtNQUpBO0lBREMsQ0FBYjtJQVNBLE1BQU1DLFdBQVcsR0FBR0YsSUFBSSxDQUFDQyxTQUF6Qjs7SUFDQSxLQUFLLElBQUlFLEtBQVQsSUFBa0JELFdBQWxCLEVBQStCO01BQzdCSixPQUFPLENBQUNDLEdBQVIsQ0FBWUksS0FBWjtJQUNELENBZG9CLENBZ0JyQjs7RUFFQSxDQWxCRDtFQW9CQSxvQkFDQyxvQkFBQyxHQUFELHFCQUNDLG9CQUFDLFNBQUQ7SUFDQyxXQUFXLEVBQUMsNEJBRGI7SUFFQyxLQUFLLEVBQUVULE9BRlI7SUFHQyxRQUFRLEVBQUVDO0VBSFgsRUFERCxlQU1DLG9CQUFDLElBQUQsbUNBTkQsQ0FERDtBQVlBLENBbkNEOztBQXFDQVMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixHQUFqQiJ9