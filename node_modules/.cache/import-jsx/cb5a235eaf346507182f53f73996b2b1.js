'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  React.useEffect(() => {
    console.log("address ##", address);
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = data.addresses.find("testAddress");

    for (let value in addressData) {
      console.log(value);
    } // console.log("addressData", addressData)

  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0SW5wdXQiLCJkZWZhdWx0IiwiQXBwIiwiYWRkcmVzcyIsInNlYXJjaCIsInVzZVN0YXRlIiwidXNlRWZmZWN0IiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJhZGRyZXNzZXMiLCJhZGRyZXNzRGF0YSIsImZpbmQiLCJ2YWx1ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7Qm94fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3QgVGV4dElucHV0ID0gcmVxdWlyZShcImluay10ZXh0LWlucHV0XCIpLmRlZmF1bHQ7XG5cblxuY29uc3QgQXBwID0gKCkgPT4ge1xuXHRjb25zdCBbYWRkcmVzcywgc2VhcmNoXSA9IFJlYWN0LnVzZVN0YXRlKFwiXCIpO1xuXG5cdFJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XG5cdFx0Y29uc29sZS5sb2coXCJhZGRyZXNzICMjXCIsIGFkZHJlc3MpXG5cdFx0Y29uc3QgZGF0YSA9IHtcblx0XHRcdGFkZHJlc3Nlczoge1xuXHRcdFx0XHRcIjB4MTAwMVwiOiBcIk1vbmVybyBzdGFuZGFyZCBhZGRyZXNzXCIsXG5cdFx0XHRcdFwiMHgxMDAyXCI6IFwiTW9uZXJvIHN1YiBhZGRyZXNzXCIsXG5cdFx0XHRcdFwiMHgxMDAzXCI6IFwiQml0Y29pbiBhZGRyZXNzXCIsXG5cdFx0XHRcdFwiMHgxMDA0XCI6IFwiRXRoZXJldW0gYWRkcmVzc1wiXG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Y29uc3QgYWRkcmVzc0RhdGEgPSBkYXRhLmFkZHJlc3Nlcy5maW5kKFwidGVzdEFkZHJlc3NcIilcblx0XHRmb3IgKGxldCB2YWx1ZSBpbiBhZGRyZXNzRGF0YSkge1xuXHRcdFx0Y29uc29sZS5sb2codmFsdWUpXG5cdFx0fVxuXG5cdFx0Ly8gY29uc29sZS5sb2coXCJhZGRyZXNzRGF0YVwiLCBhZGRyZXNzRGF0YSlcblxuXHR9KTtcblxuXHRyZXR1cm4gKFxuXHRcdDxCb3g+XG5cdFx0XHQ8VGV4dElucHV0XG5cdFx0XHRcdHBsYWNlaG9sZGVyPVwiRW50ZXIgYWRkcmVzcyB0byBzZWFyY2guLi5cIlxuXHRcdFx0XHR2YWx1ZT17YWRkcmVzc31cblx0XHRcdFx0b25DaGFuZ2U9e3NlYXJjaH1cblx0XHRcdC8+XG5cdFx0PC9Cb3g+XG5cdCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFwcDtcblxuIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNQSxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxPQUFELENBQXJCOztBQUNBLE1BQU07RUFBQ0M7QUFBRCxJQUFRRCxPQUFPLENBQUMsS0FBRCxDQUFyQjs7QUFDQSxNQUFNRSxTQUFTLEdBQUdGLE9BQU8sQ0FBQyxnQkFBRCxDQUFQLENBQTBCRyxPQUE1Qzs7QUFHQSxNQUFNQyxHQUFHLEdBQUcsTUFBTTtFQUNqQixNQUFNLENBQUNDLE9BQUQsRUFBVUMsTUFBVixJQUFvQlAsS0FBSyxDQUFDUSxRQUFOLENBQWUsRUFBZixDQUExQjtFQUVBUixLQUFLLENBQUNTLFNBQU4sQ0FBZ0IsTUFBTTtJQUNyQkMsT0FBTyxDQUFDQyxHQUFSLENBQVksWUFBWixFQUEwQkwsT0FBMUI7SUFDQSxNQUFNTSxJQUFJLEdBQUc7TUFDWkMsU0FBUyxFQUFFO1FBQ1YsVUFBVSx5QkFEQTtRQUVWLFVBQVUsb0JBRkE7UUFHVixVQUFVLGlCQUhBO1FBSVYsVUFBVTtNQUpBO0lBREMsQ0FBYjtJQVNBLE1BQU1DLFdBQVcsR0FBR0YsSUFBSSxDQUFDQyxTQUFMLENBQWVFLElBQWYsQ0FBb0IsYUFBcEIsQ0FBcEI7O0lBQ0EsS0FBSyxJQUFJQyxLQUFULElBQWtCRixXQUFsQixFQUErQjtNQUM5QkosT0FBTyxDQUFDQyxHQUFSLENBQVlLLEtBQVo7SUFDQSxDQWRvQixDQWdCckI7O0VBRUEsQ0FsQkQ7RUFvQkEsb0JBQ0Msb0JBQUMsR0FBRCxxQkFDQyxvQkFBQyxTQUFEO0lBQ0MsV0FBVyxFQUFDLDRCQURiO0lBRUMsS0FBSyxFQUFFVixPQUZSO0lBR0MsUUFBUSxFQUFFQztFQUhYLEVBREQsQ0FERDtBQVNBLENBaENEOztBQWtDQVUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCYixHQUFqQiJ9