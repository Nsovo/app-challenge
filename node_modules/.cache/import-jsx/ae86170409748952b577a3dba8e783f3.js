'use strict';

const React = require('react');

const {
  Box
} = require('ink');

const {
  Text
} = require('ink');

const TextInput = require("ink-text-input").default;

const App = () => {
  const [address, search] = React.useState("");
  const [results, SetResult] = React.useState("results");
  React.useEffect(() => {
    const data = {
      addresses: {
        "0x1001": "Monero standard address",
        "0x1002": "Monero sub address",
        "0x1003": "Bitcoin address",
        "0x1004": "Ethereum address"
      }
    };
    const addressData = Object.values(data.addresses).join(',');
    const dataArray = addressData.split(",");

    if (address && address.length > 3) {
      console.log("did it check length");

      for (let value of dataArray) {
        // console.log(value)
        if (value.includes(address)) console.log("true");
      }
    }
  });
  return /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(TextInput, {
    placeholder: "Enter address to search...",
    value: address,
    onChange: search
  }), /*#__PURE__*/React.createElement(Text, null, "Addressed searched for : ", results));
};

module.exports = App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsInJlcXVpcmUiLCJCb3giLCJUZXh0IiwiVGV4dElucHV0IiwiZGVmYXVsdCIsIkFwcCIsImFkZHJlc3MiLCJzZWFyY2giLCJ1c2VTdGF0ZSIsInJlc3VsdHMiLCJTZXRSZXN1bHQiLCJ1c2VFZmZlY3QiLCJkYXRhIiwiYWRkcmVzc2VzIiwiYWRkcmVzc0RhdGEiLCJPYmplY3QiLCJ2YWx1ZXMiLCJqb2luIiwiZGF0YUFycmF5Iiwic3BsaXQiLCJsZW5ndGgiLCJjb25zb2xlIiwibG9nIiwidmFsdWUiLCJpbmNsdWRlcyIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlcyI6WyJ1aS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5jb25zdCBSZWFjdCA9IHJlcXVpcmUoJ3JlYWN0Jyk7XG5jb25zdCB7Qm94fSA9IHJlcXVpcmUoJ2luaycpO1xuY29uc3Qge1RleHR9ID0gcmVxdWlyZSgnaW5rJyk7XG5cbmNvbnN0IFRleHRJbnB1dCA9IHJlcXVpcmUoXCJpbmstdGV4dC1pbnB1dFwiKS5kZWZhdWx0O1xuXG5cbmNvbnN0IEFwcCA9ICgpID0+IHtcblx0Y29uc3QgW2FkZHJlc3MsIHNlYXJjaF0gPSBSZWFjdC51c2VTdGF0ZShcIlwiKTtcblx0Y29uc3QgW3Jlc3VsdHMgLCBTZXRSZXN1bHRdID0gUmVhY3QudXNlU3RhdGUoXCJyZXN1bHRzXCIpXG5cblx0UmVhY3QudXNlRWZmZWN0KCgpID0+IHtcblx0XHRjb25zdCBkYXRhID0ge1xuXHRcdFx0YWRkcmVzc2VzOiB7XG5cdFx0XHRcdFwiMHgxMDAxXCI6IFwiTW9uZXJvIHN0YW5kYXJkIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDJcIjogXCJNb25lcm8gc3ViIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDNcIjogXCJCaXRjb2luIGFkZHJlc3NcIixcblx0XHRcdFx0XCIweDEwMDRcIjogXCJFdGhlcmV1bSBhZGRyZXNzXCJcblx0XHRcdH1cblx0XHR9XG5cblx0XHRjb25zdCBhZGRyZXNzRGF0YSA9ICBPYmplY3QudmFsdWVzKGRhdGEuYWRkcmVzc2VzKS5qb2luKCcsJylcblx0XHRjb25zdCBkYXRhQXJyYXkgPSBhZGRyZXNzRGF0YS5zcGxpdChcIixcIilcblx0XHRpZihhZGRyZXNzICYmIGFkZHJlc3MubGVuZ3RoID4gMykge1xuXHRcdFx0Y29uc29sZS5sb2coXCJkaWQgaXQgY2hlY2sgbGVuZ3RoXCIpXG5cdFx0XHRmb3IgKGxldCB2YWx1ZSBvZiBkYXRhQXJyYXkpIHtcblx0XHRcdFx0Ly8gY29uc29sZS5sb2codmFsdWUpXG5cdFx0XHRcdGlmICh2YWx1ZS5pbmNsdWRlcyhhZGRyZXNzKSlcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcInRydWVcIilcblx0XHRcdH1cblx0XHR9XG5cblx0fSk7XG5cblx0cmV0dXJuIChcblx0XHQ8Qm94PlxuXHRcdFx0PFRleHRJbnB1dFxuXHRcdFx0XHRwbGFjZWhvbGRlcj1cIkVudGVyIGFkZHJlc3MgdG8gc2VhcmNoLi4uXCJcblx0XHRcdFx0dmFsdWU9e2FkZHJlc3N9XG5cdFx0XHRcdG9uQ2hhbmdlPXtzZWFyY2h9XG5cdFx0XHQvPlxuXHRcdFx0PFRleHQ+XG5cdFx0XHRcdEFkZHJlc3NlZCBzZWFyY2hlZCBmb3IgOiB7cmVzdWx0c31cblx0XHRcdDwvVGV4dD5cblxuXHRcdDwvQm94PlxuXHQpO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBBcHA7XG5cbiJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTUEsS0FBSyxHQUFHQyxPQUFPLENBQUMsT0FBRCxDQUFyQjs7QUFDQSxNQUFNO0VBQUNDO0FBQUQsSUFBUUQsT0FBTyxDQUFDLEtBQUQsQ0FBckI7O0FBQ0EsTUFBTTtFQUFDRTtBQUFELElBQVNGLE9BQU8sQ0FBQyxLQUFELENBQXRCOztBQUVBLE1BQU1HLFNBQVMsR0FBR0gsT0FBTyxDQUFDLGdCQUFELENBQVAsQ0FBMEJJLE9BQTVDOztBQUdBLE1BQU1DLEdBQUcsR0FBRyxNQUFNO0VBQ2pCLE1BQU0sQ0FBQ0MsT0FBRCxFQUFVQyxNQUFWLElBQW9CUixLQUFLLENBQUNTLFFBQU4sQ0FBZSxFQUFmLENBQTFCO0VBQ0EsTUFBTSxDQUFDQyxPQUFELEVBQVdDLFNBQVgsSUFBd0JYLEtBQUssQ0FBQ1MsUUFBTixDQUFlLFNBQWYsQ0FBOUI7RUFFQVQsS0FBSyxDQUFDWSxTQUFOLENBQWdCLE1BQU07SUFDckIsTUFBTUMsSUFBSSxHQUFHO01BQ1pDLFNBQVMsRUFBRTtRQUNWLFVBQVUseUJBREE7UUFFVixVQUFVLG9CQUZBO1FBR1YsVUFBVSxpQkFIQTtRQUlWLFVBQVU7TUFKQTtJQURDLENBQWI7SUFTQSxNQUFNQyxXQUFXLEdBQUlDLE1BQU0sQ0FBQ0MsTUFBUCxDQUFjSixJQUFJLENBQUNDLFNBQW5CLEVBQThCSSxJQUE5QixDQUFtQyxHQUFuQyxDQUFyQjtJQUNBLE1BQU1DLFNBQVMsR0FBR0osV0FBVyxDQUFDSyxLQUFaLENBQWtCLEdBQWxCLENBQWxCOztJQUNBLElBQUdiLE9BQU8sSUFBSUEsT0FBTyxDQUFDYyxNQUFSLEdBQWlCLENBQS9CLEVBQWtDO01BQ2pDQyxPQUFPLENBQUNDLEdBQVIsQ0FBWSxxQkFBWjs7TUFDQSxLQUFLLElBQUlDLEtBQVQsSUFBa0JMLFNBQWxCLEVBQTZCO1FBQzVCO1FBQ0EsSUFBSUssS0FBSyxDQUFDQyxRQUFOLENBQWVsQixPQUFmLENBQUosRUFDQ2UsT0FBTyxDQUFDQyxHQUFSLENBQVksTUFBWjtNQUNEO0lBQ0Q7RUFFRCxDQXJCRDtFQXVCQSxvQkFDQyxvQkFBQyxHQUFELHFCQUNDLG9CQUFDLFNBQUQ7SUFDQyxXQUFXLEVBQUMsNEJBRGI7SUFFQyxLQUFLLEVBQUVoQixPQUZSO0lBR0MsUUFBUSxFQUFFQztFQUhYLEVBREQsZUFNQyxvQkFBQyxJQUFELHFDQUMyQkUsT0FEM0IsQ0FORCxDQUREO0FBYUEsQ0F4Q0Q7O0FBMENBZ0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCckIsR0FBakIifQ==